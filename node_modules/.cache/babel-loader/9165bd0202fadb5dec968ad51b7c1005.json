{"ast":null,"code":"import _toConsumableArray from \"/Users/terilondon/Desktop/reactclass/w7d2-todo-list-localstorage-useeffect-usereducer-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/terilondon/Desktop/reactclass/w7d2-todo-list-localstorage-useeffect-usereducer-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  todos: [],\n  inputValue: \"\"\n};\nexport default (function () {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  console.log(type, payload);\n  var todos = []; // for temp use\n\n  switch (type) {\n    case \"initializeTodos\":\n      return _objectSpread({}, prevState, {\n        todos: payload\n      });\n\n    case \"updateInput\":\n      return _objectSpread({}, prevState, {\n        inputValue: payload\n      });\n\n    case \"addTodo\":\n      if (!prevState.inputValue) return _objectSpread({}, prevState);\n      var newTodo = {\n        name: prevState.inputValue,\n        done: false\n      };\n      return {\n        todos: [].concat(_toConsumableArray(prevState.todos), [newTodo]),\n        inputValue: \"\"\n      };\n\n    case \"completeToggle\":\n      todos = _toConsumableArray(prevState.todos);\n      todos[payload].done = !todos[payload].done;\n      return _objectSpread({}, prevState, {\n        todos: todos\n      });\n\n    case \"removeTodo\":\n      todos = _toConsumableArray(prevState.todos);\n      todos.splice(payload, 1);\n      return _objectSpread({}, prevState, {\n        todos: todos\n      });\n\n    default:\n      return _objectSpread({}, prevState);\n  }\n});","map":{"version":3,"sources":["/Users/terilondon/Desktop/reactclass/w7d2-todo-list-localstorage-useeffect-usereducer-end/src/reduxReducer.js"],"names":["initialState","todos","inputValue","prevState","type","payload","console","log","newTodo","name","done","splice"],"mappings":";;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,gBAAe,YAAiD;AAAA,MAAhDC,SAAgD,uEAApCH,YAAoC;;AAAA;AAAA,MAApBI,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;AACA,MAAIJ,KAAK,GAAG,EAAZ,CAF8D,CAE9C;;AAChB,UAAQG,IAAR;AACE,SAAK,iBAAL;AACE,+BAAYD,SAAZ;AAAuBF,QAAAA,KAAK,EAAEI;AAA9B;;AACF,SAAK,aAAL;AACE,+BAAYF,SAAZ;AAAuBD,QAAAA,UAAU,EAAEG;AAAnC;;AACF,SAAK,SAAL;AACE,UAAI,CAACF,SAAS,CAACD,UAAf,EAA2B,yBAAYC,SAAZ;AAC3B,UAAMK,OAAO,GAAG;AAAEC,QAAAA,IAAI,EAAEN,SAAS,CAACD,UAAlB;AAA8BQ,QAAAA,IAAI,EAAE;AAApC,OAAhB;AACA,aAAO;AAAET,QAAAA,KAAK,+BAAME,SAAS,CAACF,KAAhB,IAAuBO,OAAvB,EAAP;AAAwCN,QAAAA,UAAU,EAAE;AAApD,OAAP;;AACF,SAAK,gBAAL;AACED,MAAAA,KAAK,sBAAOE,SAAS,CAACF,KAAjB,CAAL;AACAA,MAAAA,KAAK,CAACI,OAAD,CAAL,CAAeK,IAAf,GAAsB,CAACT,KAAK,CAACI,OAAD,CAAL,CAAeK,IAAtC;AACA,+BAAYP,SAAZ;AAAuBF,QAAAA,KAAK,EAALA;AAAvB;;AACF,SAAK,YAAL;AACEA,MAAAA,KAAK,sBAAOE,SAAS,CAACF,KAAjB,CAAL;AACAA,MAAAA,KAAK,CAACU,MAAN,CAAaN,OAAb,EAAsB,CAAtB;AACA,+BAAYF,SAAZ;AAAuBF,QAAAA,KAAK,EAALA;AAAvB;;AACF;AACE,+BAAYE,SAAZ;AAlBJ;AAoBD,CAvBD","sourcesContent":["const initialState = {\n  todos: [],\n  inputValue: \"\"\n};\n\nexport default (prevState = initialState, { type, payload }) => {\n  console.log(type, payload);\n  let todos = []; // for temp use\n  switch (type) {\n    case \"initializeTodos\":\n      return { ...prevState, todos: payload };\n    case \"updateInput\":\n      return { ...prevState, inputValue: payload };\n    case \"addTodo\":\n      if (!prevState.inputValue) return { ...prevState };\n      const newTodo = { name: prevState.inputValue, done: false };\n      return { todos: [...prevState.todos, newTodo], inputValue: \"\" };\n    case \"completeToggle\":\n      todos = [...prevState.todos];\n      todos[payload].done = !todos[payload].done;\n      return { ...prevState, todos };\n    case \"removeTodo\":\n      todos = [...prevState.todos];\n      todos.splice(payload, 1);\n      return { ...prevState, todos };\n    default:\n      return { ...prevState };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}